{
  "components": {
    "schemas": {
      "Body_enroll_speaker_libraries__library_id__speakers_post": {
        "properties": {
          "audio_files": {
            "items": {
              "format": "binary",
              "type": "string"
            },
            "title": "Audio Files",
            "type": "array"
          }
        },
        "required": [
          "audio_files"
        ],
        "title": "Body_enroll_speaker_libraries__library_id__speakers_post",
        "type": "object"
      },
      "Body_identify_speaker_libraries__library_id__identify_post": {
        "properties": {
          "audio_file": {
            "format": "binary",
            "title": "Audio File",
            "type": "string"
          }
        },
        "required": [
          "audio_file"
        ],
        "title": "Body_identify_speaker_libraries__library_id__identify_post",
        "type": "object"
      },
      "Body_import_library_libraries_import_post": {
        "properties": {
          "lib_file": {
            "format": "binary",
            "title": "Lib File",
            "type": "string"
          }
        },
        "required": [
          "lib_file"
        ],
        "title": "Body_import_library_libraries_import_post",
        "type": "object"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "title": "Detail",
            "type": "array"
          }
        },
        "title": "HTTPValidationError",
        "type": "object"
      },
      "IdentifiedSpeaker": {
        "properties": {
          "id": {
            "title": "Id",
            "type": "string"
          },
          "name": {
            "title": "Name",
            "type": "string"
          },
          "similarity": {
            "title": "Similarity",
            "type": "number"
          }
        },
        "required": [
          "id",
          "name",
          "similarity"
        ],
        "title": "IdentifiedSpeaker",
        "type": "object"
      },
      "LibraryOut": {
        "properties": {
          "created_at": {
            "title": "Created At",
            "type": "string"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "name": {
            "title": "Name",
            "type": "string"
          },
          "speakers": {
            "items": {
              "$ref": "#/components/schemas/SpeakerOut"
            },
            "title": "Speakers",
            "type": "array"
          }
        },
        "required": [
          "id",
          "name",
          "created_at",
          "speakers"
        ],
        "title": "LibraryOut",
        "type": "object"
      },
      "SpeakerIdentificationResponse": {
        "properties": {
          "speakers": {
            "items": {
              "$ref": "#/components/schemas/IdentifiedSpeaker"
            },
            "title": "Speakers",
            "type": "array"
          }
        },
        "required": [
          "speakers"
        ],
        "title": "SpeakerIdentificationResponse",
        "type": "object"
      },
      "SpeakerOut": {
        "properties": {
          "id": {
            "title": "Id",
            "type": "string"
          },
          "name": {
            "title": "Name",
            "type": "string"
          }
        },
        "required": [
          "id",
          "name"
        ],
        "title": "SpeakerOut",
        "type": "object"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "title": "Location",
            "type": "array"
          },
          "msg": {
            "title": "Message",
            "type": "string"
          },
          "type": {
            "title": "Error Type",
            "type": "string"
          }
        },
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError",
        "type": "object"
      }
    }
  },
  "info": {
    "title": "Voiceprint Rest API",
    "version": "0.1.0"
  },
  "openapi": "3.1.0",
  "paths": {
    "/libraries": {
      "get": {
        "description": "Get a list of all available libraries.",
        "operationId": "list_libraries_libraries_get",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/LibraryOut"
                  },
                  "title": "Response List Libraries Libraries Get",
                  "type": "array"
                }
              }
            },
            "description": "Successful Response"
          }
        },
        "summary": "List Libraries"
      },
      "post": {
        "description": "Create a new library.",
        "operationId": "create_library_libraries_post",
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "required": true,
            "schema": {
              "title": "Name",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LibraryOut"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Create Library"
      }
    },
    "/libraries/import": {
      "post": {
        "description": "Import a library.",
        "operationId": "import_library_libraries_import_post",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_import_library_libraries_import_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LibraryOut"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Import Library"
      }
    },
    "/libraries/{library_id}": {
      "delete": {
        "description": "Delete a library by ID.",
        "operationId": "delete_library_libraries__library_id__delete",
        "parameters": [
          {
            "in": "path",
            "name": "library_id",
            "required": true,
            "schema": {
              "title": "Library Id",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Delete Library Libraries  Library Id  Delete",
                  "type": "string"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Delete Library"
      }
    },
    "/libraries/{library_id}/identify": {
      "post": {
        "description": "Identify a speaker from an audio sample.",
        "operationId": "identify_speaker_libraries__library_id__identify_post",
        "parameters": [
          {
            "in": "path",
            "name": "library_id",
            "required": true,
            "schema": {
              "title": "Library Id",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "threshold",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Threshold"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Limit"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_identify_speaker_libraries__library_id__identify_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpeakerIdentificationResponse"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Identify Speaker"
      }
    },
    "/libraries/{library_id}/speakers": {
      "post": {
        "description": "Enroll a new speaker with their audio samples.",
        "operationId": "enroll_speaker_libraries__library_id__speakers_post",
        "parameters": [
          {
            "in": "path",
            "name": "library_id",
            "required": true,
            "schema": {
              "title": "Library Id",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "name",
            "required": true,
            "schema": {
              "title": "Name",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_enroll_speaker_libraries__library_id__speakers_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpeakerOut"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Enroll Speaker"
      }
    },
    "/libraries/{library_id}/speakers/{speaker_id}": {
      "delete": {
        "description": "Delete a speaker by ID.",
        "operationId": "delete_speaker_libraries__library_id__speakers__speaker_id__delete",
        "parameters": [
          {
            "in": "path",
            "name": "library_id",
            "required": true,
            "schema": {
              "title": "Library Id",
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "speaker_id",
            "required": true,
            "schema": {
              "title": "Speaker Id",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Delete Speaker Libraries  Library Id  Speakers  Speaker Id  Delete",
                  "type": "string"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Delete Speaker"
      }
    }
  }
}